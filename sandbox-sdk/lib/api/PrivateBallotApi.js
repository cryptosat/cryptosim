"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PrivateBallotApi = void 0;
var _ApiClient = require("../ApiClient");
var _CreateBallotResponse = require("../model/CreateBallotResponse");
var _GetBallotResponse = require("../model/GetBallotResponse");
var _GetResultResponse = require("../model/GetResultResponse");
var _VoteBody = require("../model/VoteBody");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); } /*
                                                                                                                                                                                                                                                                                                                                                                                               * Cryptosat Sandbox
                                                                                                                                                                                                                                                                                                                                                                                               * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * OpenAPI spec version: 1.0.0
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * NOTE: This class is auto generated by the swagger code generator program.
                                                                                                                                                                                                                                                                                                                                                                                               * https://github.com/swagger-api/swagger-codegen.git
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * Swagger Codegen version: 3.0.46
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * Do not edit the class manually.
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               */
var PrivateBallotApi = /*#__PURE__*/function () {
  function PrivateBallotApi(apiClient) {
    _classCallCheck(this, PrivateBallotApi);
    this.apiClient = apiClient || _ApiClient.ApiClient.instance;
  }
  _createClass(PrivateBallotApi, [{
    key: "ballotMinParticipantsPostWithHttpInfo",
    value: function ballotMinParticipantsPostWithHttpInfo(minParticipants) {
      var postBody = null;
      // verify the required parameter 'minParticipants' is set
      if (minParticipants === undefined || minParticipants === null) {
        throw new Error("Missing the required parameter 'minParticipants' when calling ballotMinParticipantsPost");
      }
      var pathParams = {
        'min_participants': minParticipants
      };
      var queryParams = {};
      var headerParams = {};
      var formParams = {};
      var authNames = ['RequestAuthorizer'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = _CreateBallotResponse.CreateBallotResponse;
      return this.apiClient.callApi('/ballot/{min_participants}', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);
    }
  }, {
    key: "ballotMinParticipantsPost",
    value: function ballotMinParticipantsPost(minParticipants) {
      return this.ballotMinParticipantsPostWithHttpInfo(minParticipants).then(function (response_and_data) {
        return response_and_data.data;
      });
    }
  }, {
    key: "ballotsBallotIdFinalizePostWithHttpInfo",
    value: function ballotsBallotIdFinalizePostWithHttpInfo(ballotId) {
      var postBody = null;
      // verify the required parameter 'ballotId' is set
      if (ballotId === undefined || ballotId === null) {
        throw new Error("Missing the required parameter 'ballotId' when calling ballotsBallotIdFinalizePost");
      }
      var pathParams = {
        'ballot_id': ballotId
      };
      var queryParams = {};
      var headerParams = {};
      var formParams = {};
      var authNames = ['RequestAuthorizer'];
      var contentTypes = [];
      var accepts = [];
      var returnType = null;
      return this.apiClient.callApi('/ballots/{ballot_id}/finalize', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);
    }
  }, {
    key: "ballotsBallotIdFinalizePost",
    value: function ballotsBallotIdFinalizePost(ballotId) {
      return this.ballotsBallotIdFinalizePostWithHttpInfo(ballotId).then(function (response_and_data) {
        return response_and_data.data;
      });
    }
  }, {
    key: "ballotsBallotIdGetWithHttpInfo",
    value: function ballotsBallotIdGetWithHttpInfo(ballotId) {
      var postBody = null;
      // verify the required parameter 'ballotId' is set
      if (ballotId === undefined || ballotId === null) {
        throw new Error("Missing the required parameter 'ballotId' when calling ballotsBallotIdGet");
      }
      var pathParams = {
        'ballot_id': ballotId
      };
      var queryParams = {};
      var headerParams = {};
      var formParams = {};
      var authNames = ['RequestAuthorizer'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = _GetBallotResponse.GetBallotResponse;
      return this.apiClient.callApi('/ballots/{ballot_id}', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);
    }
  }, {
    key: "ballotsBallotIdGet",
    value: function ballotsBallotIdGet(ballotId) {
      return this.ballotsBallotIdGetWithHttpInfo(ballotId).then(function (response_and_data) {
        return response_and_data.data;
      });
    }
  }, {
    key: "ballotsBallotIdResultGetWithHttpInfo",
    value: function ballotsBallotIdResultGetWithHttpInfo(ballotId) {
      var postBody = null;
      // verify the required parameter 'ballotId' is set
      if (ballotId === undefined || ballotId === null) {
        throw new Error("Missing the required parameter 'ballotId' when calling ballotsBallotIdResultGet");
      }
      var pathParams = {
        'ballot_id': ballotId
      };
      var queryParams = {};
      var headerParams = {};
      var formParams = {};
      var authNames = ['RequestAuthorizer'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = _GetResultResponse.GetResultResponse;
      return this.apiClient.callApi('/ballots/{ballot_id}/result', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);
    }
  }, {
    key: "ballotsBallotIdResultGet",
    value: function ballotsBallotIdResultGet(ballotId) {
      return this.ballotsBallotIdResultGetWithHttpInfo(ballotId).then(function (response_and_data) {
        return response_and_data.data;
      });
    }
  }, {
    key: "ballotsBallotIdVotePostWithHttpInfo",
    value: function ballotsBallotIdVotePostWithHttpInfo(body, ballotId) {
      var postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling ballotsBallotIdVotePost");
      }
      // verify the required parameter 'ballotId' is set
      if (ballotId === undefined || ballotId === null) {
        throw new Error("Missing the required parameter 'ballotId' when calling ballotsBallotIdVotePost");
      }
      var pathParams = {
        'ballot_id': ballotId
      };
      var queryParams = {};
      var headerParams = {};
      var formParams = {};
      var authNames = ['RequestAuthorizer'];
      var contentTypes = ['application/json'];
      var accepts = [];
      var returnType = null;
      return this.apiClient.callApi('/ballots/{ballot_id}/vote', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);
    }
  }, {
    key: "ballotsBallotIdVotePost",
    value: function ballotsBallotIdVotePost(body, ballotId) {
      return this.ballotsBallotIdVotePostWithHttpInfo(body, ballotId).then(function (response_and_data) {
        return response_and_data.data;
      });
    }
  }]);
  return PrivateBallotApi;
}();
exports.PrivateBallotApi = PrivateBallotApi;