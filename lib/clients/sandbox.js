const {
  DelayEncryptionApi,
  MessageSigningApi,
  PrivateBallotApi,
  RandomBeaconApi,
  SatMetricsApi,
} = require('sandbox-sdk');

class SandboxClient {
  #satMetricsApi = new SatMetricsApi();
  #randomBeaconApi = new RandomBeaconApi();
  #messageSigningApi = new MessageSigningApi();
  #delayEncryptionApi = new DelayEncryptionApi();
  #privateBallotApi = new PrivateBallotApi();
  #cache = {};

  /**
   * @return {{status: string, timestamp: Number}} the operational status last
   *         reported by the satellite and received by any of the ground
   *         stations. The timestamp refers to the time when that last
   *         was received.
   */
  async status() {
    const response = await this.#satMetricsApi.timestampGet();
    return {
      status: 'ok',
      timestamp: response.timestampMs,
    };
  }

  /**
   * @return {{publicRandom: Buffer, signature: Buffer}} -
   *         random bytes last generated by the satellite along with the
   *         signature using the
   *         satellite's private RSA key demonstrating it was in fact issued
   *         by the satellite.
   */
  async getPublicRandom() {
    const response = await this.#satMetricsApi.publicRandomGet();
    return {
      publicRandom: Buffer.from(response.randomness, 'hex'),
      signature: Buffer.from(response.signature, 'hex'),
    };
  }
}

module.exports = SandboxClient;
